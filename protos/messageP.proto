syntax = "proto3";
package protobuf;

service CharacterService {
    rpc Register (ProfileInfo) returns (Empty) {}
    rpc Login (User) returns (UserLogged) {}
    rpc Logout (Empty) returns (Empty) {}

    rpc InsertFile (FileName) returns (FileInfo) {}
    rpc RemoveFile (FileInfo) returns (Empty) {}
    rpc GetFiles (Empty) returns (FilesInfoList) {}
    rpc ShareFile (FileInfo) returns (Empty) {}
    rpc ImportFile (FileInfo) returns (Empty) {} //usato solo il fileIdentifier
    rpc GetFileContent (FileInfo) returns (stream Chunk) {}
    rpc GetSymbols (stream FileInfo) returns (stream Message) {}
    rpc InsertSymbols (Message) returns (Empty) {}

    rpc SetProfile (ProfileInfo) returns (Empty) {}
    rpc GetProfile (Empty) returns (ProfileInfo) {}
//    rpc GetProfileImage (Empty) returns (stream Chunk) {}
}

//numeri compresi tra 1 e 16 sono più efficienti, i message più usati/importanti hanno precedenza

message Empty {
}

message Message {
    string fileIdentifier = 1;
    bool isEraseBool = 2;
    Symbol symbol = 3;
}

message Symbol {
    string character = 4;
    string uniqueId = 5;
    repeated int32 pos = 6;
    bool bold = 23;
    bool underline = 24;
    bool italic = 25;
    int32 dimension = 26;
    string color = 27;
    string font = 29;
    string allineamento = 31;
}

message FileName {
    string fileName = 7;
}

message Chunk {
    //    16KiB - 64KiB
    bytes chunk = 8;
    int32 size = 60;
}

message FileInfo {
    string filename = 9;
    string date = 22;
    string fileIdentifier = 70;
    int32 size = 10;
    string emailO = 11; //email Owner
    repeated string emailAL = 12; //userAccessList
}

message FilesInfoList {
    repeated FileInfo fileIL = 13;
}

message User {
    string email = 14;
    string password = 15;
    string passwordR = 16;
}

message UserLogged {
    string token = 17;
    ProfileInfo profileInfo = 60;
}

message ProfileInfo {
    string username = 18;
    string name = 19;
    string surname = 20;
    User user = 21;
}

message UserMap {
    map<string, ProfileInfo> userMap = 30;
}

message FileClientMap {
    map<string, FilesInfoList> fileClientMap = 43;
}

message SymbolVector {
    repeated Symbol symbolVector = 50;
}






